var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,i=(t,r,n)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[r]=n,s=(e,t)=>{for(var r in t||(t={}))o.call(t,r)&&i(e,r,t[r]);if(n)for(var r of n(t))l.call(t,r)&&i(e,r,t[r]);return e},a=(e,n)=>t(e,r(n));function c(e,t){return"X"===t?1e3*e:e}function p(e){const{series:t,x:r,xkey:n,ykey:o,timestamp:l,fillNull:i}=e,p=(u=(e,t)=>{return(r=c(e[n],l))<(o=t)?-1:r>o?1:r>=o?0:NaN;var r,o},{left:(e,t,r,n)=>{for(null==r&&(r=0),null==n&&(n=e.length);r<n;){const o=r+n>>>1;u(e[o],t)<0?r=o+1:n=o}return r},right:(e,t,r,n)=>{for(null==r&&(r=0),null==n&&(n=e.length);r<n;){const o=r+n>>>1;u(e[o],t)>0?n=o:r=o+1}return r}}).left;var u;const f=new Date(r).getTime(),y=[];return"[object Array]"!==Object.prototype.toString.call(t)?[]:(t.forEach(((e,t)=>{if(!1===e.visible)return;const{name:u,color:m}=e,b=function(e,t){const r={};for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&"[object Function]"===Object.prototype.toString.call(t)&&t(n)&&(r[n]=e[n]);return r}(e,(e=>"data"!==e));let d,{data:O=[]}=e;if("[object Array]"!==Object.prototype.toString.call(O))return;if(O=O.filter((e=>"number"==typeof e[o]||"number"==typeof i)),0===O.length)return;const v=p(O,r),g=O[v-1],j=O[v];if(g&&j){const e=c(g[n],l),r=c(j[n],l);let p=g[o],O=j[o];null===p&&void 0!==i&&(p=i),null===O&&void 0!==i&&(O=i),d=f-e<r-f?a(s({},g),{name:u,color:m,timestamp:e,value:p,serieIndex:t,serieOptions:b}):a(s({},j),{name:u,color:m,timestamp:r,value:O,serieIndex:t,serieOptions:b}),y.push(d)}else if(g){const e=c(g[n],l);let r=g[o];null===r&&void 0!==i&&(r=i),d=a(s({},g),{name:u,color:m,timestamp:e,value:r,serieIndex:t,serieOptions:b}),y.push(d)}else if(j){const e=c(j[n],l);let r=j[o];null===r&&void 0!==i&&(r=i),d=a(s({},j),{name:u,color:m,timestamp:e,value:r,serieIndex:t,serieOptions:b}),y.push(d)}})),y)}const u={},f={},y=self;y.addEventListener("message",(e=>{const{data:t}=e;t.id&&(u[t.id]&&t.flag||(u[t.id]=t.str,f[t.id]=JSON.parse(t.str)));const r=p({x:t.x,xkey:t.xkey,ykey:t.ykey,y0key:t.y0key,timestamp:t.timestamp,series:f[t.id],fillNull:t.fillNull});y.postMessage(r)}));
//# sourceMappingURL=worker.f0706a63.js.map
